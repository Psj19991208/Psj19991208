#ifndef __SENSER_H
#define __SENSER_H

#include "Arduino.h"

#define TRIG 13
#define ECHO 12
#define TRIG1 11
#define ECHO1 10

void SenserInit(void);
long ReadSenser1(void);
long ReadSenser2(void);

#endif // __SENSER_H
#ifndef __MOTOR_H
#define __MOTOR_H

#include "Arduino.h"
#define Front 3
#define Back 4
#define PWM 5

void motorsetup(void);
void motorstart(void);
void motorstop(void);

#endif // __MOTOR_H
#include "senser.h"

void SenserInit(void)
{
  pinMode(TRIG, OUTPUT);
  pinMode(ECHO, INPUT);
  pinMode(TRIG1, OUTPUT);
  pinMode(ECHO1, INPUT);
}

long ReadSenser1(void)
{
  long duration;
  long distance;
  
  digitalWrite(TRIG, HIGH);
  delayMicroseconds(2);
  
  digitalWrite(TRIG, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG, LOW);

  duration = pulseIn(ECHO, HIGH);
  distance = duration / 58.2;

  return distance;
  
}
long ReadSenser2(void)
{
  long duration1;
  long distance1;
  
  digitalWrite(TRIG1, HIGH);
  delayMicroseconds(2);
  
  digitalWrite(TRIG1, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG1, LOW);

  duration1 = pulseIn(ECHO1, HIGH);
  distance1 = duration1 / 58.2;

  return distance1;
  
}
#include "motor.h"

void motorsetup(void)
{
  pinMode(Front, OUTPUT);
  pinMode(Back, OUTPUT);
  pinMode(PWM, OUTPUT);
}
void motorstart(void)
{
  digitalWrite(Front, HIGH);
  digitalWrite(Back, LOW);
  analogWrite(PWM, 255);
  delay(1000);
}
void motorstop(void)
{
  digitalWrite(Front, LOW);
  digitalWrite(Back, LOW);
  analogWrite(PWM, 0);
  delay(500);
}

#include "senser.h"
#include "motor.h"
#define LED 7
#define PIR 8

int count = 0;
int pirState = LOW;
int val = 0;
void setup() 
{
  Serial.begin(9600);
  SenserInit();
  motorsetup();
  pinMode(LED, OUTPUT);
  pinMode(PIR, INPUT);
}

void loop() {
  Serial.println("봉지갯수를 입력하세요");
  val = digitalRead(PIR);
  if (Serial.available())
  {
    int count = Serial.parseInt();
    delay(100);
    while(ReadSenser2() <= 60 && val == HIGH)
    {
      pirState = HIGH;
      delay(10);
      if(count >= 1)
      {
        digitalWrite(LED, HIGH);
        delay(100);
        while (count >= 1)
        {
          Serial.println(ReadSenser1());
          Serial.println(count);
          motorstart();
          while (ReadSenser1() <= 5)
          {
              motorstop();
            if(ReadSenser1() > 5)
            {
              count--;
              Serial.print(count);
              break;
            }
        }
      }
      }
      else
      {
        digitalWrite(LED, LOW);
        pirState = LOW;
        delay(10);
        break;
      }
    } 
  }
}
-- Main Arduino Nano Code

#include <SoftwareSerial.h>
SoftwareSerial HM10(8, 7);
#include "pitches.h"
#define Buzzer 4
int Plastic_Bag = 100;
int melodySize = 75;
int melody[] = {
NOTE_D4,NOTE_G4,NOTE_AS4,NOTE_D5,NOTE_C5,NOTE_AS4,NOTE_A4,NOTE_AS4,
         NOTE_G4,NOTE_AS4,NOTE_D5,NOTE_G5,0,NOTE_G5,NOTE_G5,NOTE_A5,
NOTE_F5,NOTE_DS5,NOTE_F5,
         NOTE_A4,NOTE_D5,NOTE_F5,NOTE_A5,0,NOTE_G5,0,NOTE_F5,NOTE_E5,
NOTE_DS5,NOTE_E5,
         NOTE_G5,0,NOTE_F5,0,NOTE_E5,NOTE_D5,NOTE_CS5,NOTE_D5,
         NOTE_D5,NOTE_C5,NOTE_AS4,NOTE_A4,NOTE_B4,NOTE_CS5,NOTE_D5};
int noteDurations[] = {3, 3, 3, 1, 3, 3, 3, 1,
           3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 1,
            3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6,
            3, 3, 3, 3,  6, 6, 6, 6,
            3, 3, 3, 3, 3, 3, 1};

void setup() {
  Serial.begin(9600);
  Serial.println("HELLO");
  HM10.begin(9600);
  HM10.println("AT+NAMEBB_10");
  pinMode(13, OUTPUT);
  pinMode(Buzzer, OUTPUT);
}

void loop() {  
 while(HM10.available())
 {
  int count = (int)HM10.parseInt();
  Serial.println(count);
  Serial.println(Plastic_Bag);
  if(count >= 1)
  {
    digitalWrite(13, HIGH);
    delay(1000);
    digitalWrite(13, LOW);
    delay(1000);
    Plastic_Bag = Plastic_Bag - count;
  }
  if(Plastic_Bag == 0)
  {
    sing();
  }
 }
}
void sing() {
    for (int thisNote = 0; thisNote < 45; thisNote++)
      {
        int noteDuration = 1000 / noteDurations[thisNote];
        tone(Buzzer, melody[thisNote], noteDuration); 
        int pauseBetweenNotes = noteDuration * 1.30000;
        delay(pauseBetweenNotes);                        
        noTone(Buzzer);                           
      }
}
-- Sub Arduino Uno Code ( Bluetooth Module )
